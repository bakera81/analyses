[
  {
    "objectID": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html",
    "href": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html",
    "title": "Data Analysis Portfolio",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntt &lt;- tidytuesdayR::tt_load('2022-12-06')\n\n---- Compiling #TidyTuesday Information for 2022-12-06 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"elevators.csv\"\nNew names:\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\ntt$elevators %&gt;% \n  janitor::clean_names() %&gt;%\n  glimpse()\n\nRows: 76,088\nColumns: 29\n$ dv_device_number             &lt;chr&gt; \"1D1\", \"1D10000\", \"1D10001\", \"1D10006\", \"…\n$ device_status                &lt;chr&gt; \"W\", \"A\", \"A\", \"A\", \"A\", \"W\", \"W\", \"A\", \"…\n$ dv_device_status_description &lt;chr&gt; \"WK IN PROG\", \"ACTIVE\", \"ACTIVE\", \"ACTIVE…\n$ bin                          &lt;dbl&gt; 1084781, 1008273, 1078701, 1003957, 10039…\n$ tax_block                    &lt;dbl&gt; 1480, 525, 844, 306, 306, 446, 446, 1270,…\n$ tax_lot                      &lt;dbl&gt; 1, 56, 17, 14, 14, 48, 48, 1, 62, 32, 32,…\n$ house_number                 &lt;chr&gt; \"521\", \"494\", \"31\", \"271\", \"271\", \"93\", \"…\n$ street_name                  &lt;chr&gt; \"EAST   68 STREET\", \"WEST BROADWAY\", \"UNI…\n$ zip_code                     &lt;dbl&gt; 0, 10012, 100030000, 100020000, 100020000…\n$ borough                      &lt;chr&gt; \"Manhattan\", \"Manhattan\", \"Manhattan\", \"M…\n$ device_type                  &lt;chr&gt; \"Dumbwaiter (D)\", \"Dumbwaiter (D)\", \"Dumb…\n$ dv_lastper_insp_date         &lt;dbl&gt; NA, 20140325, 20150803, 20150429, 2015042…\n$ dv_lastper_insp_disp         &lt;chr&gt; NA, \"NV\", \"NV\", \"NV\", \"NV\", NA, NA, \"DF\",…\n$ dv_approval_date             &lt;chr&gt; NA, \"19960524\", \"19961021\", \"19961001\", \"…\n$ dv_manufacturer              &lt;chr&gt; NA, \"**\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dv_travel_distance           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_speed_fpm                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_capacity_lbs              &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_car_buffer_type           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_governor_type             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_machine_type              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_safety_type               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_mode_operation            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_status_date               &lt;dbl&gt; 20090115, 20140113, 20090116, 19970226, 1…\n$ dv_floor_from                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_floor_to                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ x27                          &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ latitude                     &lt;dbl&gt; 40.76445, 40.72725, 40.73681, 40.71771, 4…\n$ longitude                    &lt;dbl&gt; -73.95414, -73.99984, -73.99109, -73.9930…\n\nelevators &lt;- tt$elevators %&gt;%\n  janitor::clean_names() %&gt;%\n  rename_all(str_remove, \"^dv_\") %&gt;%\n  mutate(\n    floor_to_raw = floor_to,\n    floor_to = as.numeric(floor_to_raw),\n    floor_to = if_else(floor_to &gt; 90, NA, floor_to),\n    zip_code = na_if(zip_code, 0),\n    zip_code = str_sub(zip_code, 1, 5)) %&gt;%\n  filter(longitude &gt; -76)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_to = as.numeric(floor_to_raw)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n\nelevators %&gt;%\n  ggplot(aes(longitude, latitude, color = borough)) +\n  geom_point()\n\n\n\n\n\n\n\nelevators %&gt;%\n  filter(!is.na(floor_to)) %&gt;%\n  mutate(floor_to = as.numeric(floor_to)) %&gt;%\n  ggplot(aes(floor_to)) + \n  geom_histogram() +\n  scale_x_log10(labels = scales::comma_format(1))\n\nWarning in scale_x_log10(labels = scales::comma_format(1)): log-10\ntransformation introduced infinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nby_building &lt;- elevators %&gt;%\n  arrange(desc(floor_to)) %&gt;%\n  group_by(bin, house_number, street_name, zip_code, borough, longitude, latitude) %&gt;%\n  summarize(\n    max_floor = na_if(max(floor_to, na.rm = T), -Inf),\n    n_elevators = n(),\n    latitude = mean(latitude, na.rm = T),\n    longitude = mean(longitude, na.rm = T),\n    .groups = \"drop\") %&gt;%\n  arrange(desc(max_floor)) \n\nWarning: There were 6627 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `max_floor = na_if(max(floor_to, na.rm = T), -Inf)`.\nℹ In group 24: `bin = 1000041`, `house_number = \"11\"`, `street_name = \"STONE\n  ST\"`, `zip_code = \"10004\"`, `borough = \"Manhattan\"`, `longitude = -74.01224`,\n  `latitude = 40.7042`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 6626 remaining warnings.\n\ng &lt;- by_building %&gt;%\n  filter(!is.na(max_floor)) %&gt;%\n  arrange(max_floor) %&gt;%\n  ggplot(aes(longitude, latitude, color = max_floor)) +\n  geom_point() +\n  # scale_color_continuous(trans = \"log10\")\n  scale_color_gradient2(\n    trans = \"log10\",\n    low = \"blue\",\n    high = \"red\",\n    midpoint = log10(10)\n  ) + \n  ggthemes::theme_map() + \n  labs(title = \"Height of NYC buildings by elevator floor\")\n\ng\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", :\nlog-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nlibrary(rayshader)\nplot_gg(g)\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nzip_codes &lt;- read_sf(\"data/Modified Zip Code Tabulation Areas (MODZCTA)_20250310\")\n\nby_zip_code &lt;- by_building %&gt;%\n filter(!is.na(zip_code)) %&gt;%\n group_by(zip_code, borough) %&gt;%\n summarize(n_buildings = n(),\n           geom_mean_height = exp(mean(log(max_floor), na.rm = T)),\n           tallest_building = max(max_floor, na.rm = T),\n           .groups = \"drop\") %&gt;%\n filter(n_buildings &gt;= 20) %&gt;%\n arrange(desc(geom_mean_height))\n\nWarning: There were 3 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `tallest_building = max(max_floor, na.rm = T)`.\nℹ In group 85: `zip_code = \"10565\"` and `borough = \"Bronx\"`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\n\njoined_zip_codes &lt;- zip_codes %&gt;%\n left_join(by_zip_code, by = c(\"modzcta\" = \"zip_code\")) %&gt;%\n mutate(\n   # population_density = POPULATION / AREA,\n   elevator_building_density = n_buildings / pop_est)\n\njoined_zip_codes %&gt;%\n ggplot(aes(fill = geom_mean_height)) +\n geom_sf() +\n scale_fill_gradient2(low = \"blue\",\n                     high = \"red\",\n                     midpoint = log10(6),\n                     trans = \"log10\") +\n ggthemes::theme_map() +\n coord_sf(datum = NA) +\n labs(fill = \"Average (geometric) height of buildings with elevators\") +\n theme(legend.position = \"top\")\n\nWarning in scale_fill_gradient2(low = \"blue\", high = \"red\", midpoint =\nlog10(6), : log-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_boxplot() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_violin() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n\nelevators %&gt;%\n mutate(floor_from = as.numeric(floor_from)) %&gt;%\n ggplot(aes(floor_to - floor_from, parse_number(speed_fpm))) +\n geom_point() +\n scale_x_log10() +\n scale_y_log10()\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_from = as.numeric(floor_from)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nWarning: 14 parsing failures.\n  row col expected actual\n17922  -- a number   ----\n31755  -- a number   `   \n33460  -- a number   *ABV\n36257  -- a number   ----\n38593  -- a number   A   \n..... ... ........ ......\nSee problems(...) for more details.\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning in scale_y_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 66183 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Analyses",
      "Tidy Tuesday: NYC Elevators"
    ]
  },
  {
    "objectID": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html#tidy-tuesday-nyc-elevators-2022-12-06",
    "href": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html#tidy-tuesday-nyc-elevators-2022-12-06",
    "title": "Analysis Portfolio",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntt &lt;- tidytuesdayR::tt_load('2022-12-06')\n\n---- Compiling #TidyTuesday Information for 2022-12-06 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"elevators.csv\"\nNew names:\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\ntt$elevators %&gt;% \n  janitor::clean_names() %&gt;%\n  glimpse()\n\nRows: 76,088\nColumns: 29\n$ dv_device_number             &lt;chr&gt; \"1D1\", \"1D10000\", \"1D10001\", \"1D10006\", \"…\n$ device_status                &lt;chr&gt; \"W\", \"A\", \"A\", \"A\", \"A\", \"W\", \"W\", \"A\", \"…\n$ dv_device_status_description &lt;chr&gt; \"WK IN PROG\", \"ACTIVE\", \"ACTIVE\", \"ACTIVE…\n$ bin                          &lt;dbl&gt; 1084781, 1008273, 1078701, 1003957, 10039…\n$ tax_block                    &lt;dbl&gt; 1480, 525, 844, 306, 306, 446, 446, 1270,…\n$ tax_lot                      &lt;dbl&gt; 1, 56, 17, 14, 14, 48, 48, 1, 62, 32, 32,…\n$ house_number                 &lt;chr&gt; \"521\", \"494\", \"31\", \"271\", \"271\", \"93\", \"…\n$ street_name                  &lt;chr&gt; \"EAST   68 STREET\", \"WEST BROADWAY\", \"UNI…\n$ zip_code                     &lt;dbl&gt; 0, 10012, 100030000, 100020000, 100020000…\n$ borough                      &lt;chr&gt; \"Manhattan\", \"Manhattan\", \"Manhattan\", \"M…\n$ device_type                  &lt;chr&gt; \"Dumbwaiter (D)\", \"Dumbwaiter (D)\", \"Dumb…\n$ dv_lastper_insp_date         &lt;dbl&gt; NA, 20140325, 20150803, 20150429, 2015042…\n$ dv_lastper_insp_disp         &lt;chr&gt; NA, \"NV\", \"NV\", \"NV\", \"NV\", NA, NA, \"DF\",…\n$ dv_approval_date             &lt;chr&gt; NA, \"19960524\", \"19961021\", \"19961001\", \"…\n$ dv_manufacturer              &lt;chr&gt; NA, \"**\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dv_travel_distance           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_speed_fpm                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_capacity_lbs              &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_car_buffer_type           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_governor_type             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_machine_type              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_safety_type               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_mode_operation            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_status_date               &lt;dbl&gt; 20090115, 20140113, 20090116, 19970226, 1…\n$ dv_floor_from                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_floor_to                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ x27                          &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ latitude                     &lt;dbl&gt; 40.76445, 40.72725, 40.73681, 40.71771, 4…\n$ longitude                    &lt;dbl&gt; -73.95414, -73.99984, -73.99109, -73.9930…\n\nelevators &lt;- tt$elevators %&gt;%\n  janitor::clean_names() %&gt;%\n  rename_all(str_remove, \"^dv_\") %&gt;%\n  mutate(\n    floor_to_raw = floor_to,\n    floor_to = as.numeric(floor_to_raw),\n    floor_to = if_else(floor_to &gt; 90, NA, floor_to),\n    zip_code = na_if(zip_code, 0),\n    zip_code = str_sub(zip_code, 1, 5)) %&gt;%\n  filter(longitude &gt; -76)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_to = as.numeric(floor_to_raw)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n\nelevators %&gt;%\n  ggplot(aes(longitude, latitude, color = borough)) +\n  geom_point()\n\n\n\n\n\n\n\nelevators %&gt;%\n  filter(!is.na(floor_to)) %&gt;%\n  mutate(floor_to = as.numeric(floor_to)) %&gt;%\n  ggplot(aes(floor_to)) + \n  geom_histogram() +\n  scale_x_log10(labels = scales::comma_format(1))\n\nWarning in scale_x_log10(labels = scales::comma_format(1)): log-10\ntransformation introduced infinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nby_building &lt;- elevators %&gt;%\n  arrange(desc(floor_to)) %&gt;%\n  group_by(bin, house_number, street_name, zip_code, borough, longitude, latitude) %&gt;%\n  summarize(\n    max_floor = na_if(max(floor_to, na.rm = T), -Inf),\n    n_elevators = n(),\n    latitude = mean(latitude, na.rm = T),\n    longitude = mean(longitude, na.rm = T),\n    .groups = \"drop\") %&gt;%\n  arrange(desc(max_floor)) \n\nWarning: There were 6627 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `max_floor = na_if(max(floor_to, na.rm = T), -Inf)`.\nℹ In group 24: `bin = 1000041`, `house_number = \"11\"`, `street_name = \"STONE\n  ST\"`, `zip_code = \"10004\"`, `borough = \"Manhattan\"`, `longitude = -74.01224`,\n  `latitude = 40.7042`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 6626 remaining warnings.\n\ng &lt;- by_building %&gt;%\n  filter(!is.na(max_floor)) %&gt;%\n  arrange(max_floor) %&gt;%\n  ggplot(aes(longitude, latitude, color = max_floor)) +\n  geom_point() +\n  # scale_color_continuous(trans = \"log10\")\n  scale_color_gradient2(\n    trans = \"log10\",\n    low = \"blue\",\n    high = \"red\",\n    midpoint = log10(10)\n  ) + \n  ggthemes::theme_map() + \n  labs(title = \"Height of NYC buildings by elevator floor\")\n\ng\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", :\nlog-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nlibrary(rayshader)\nplot_gg(g)\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nzip_codes &lt;- read_sf(\"data/Modified Zip Code Tabulation Areas (MODZCTA)_20250310\")\n\nby_zip_code &lt;- by_building %&gt;%\n filter(!is.na(zip_code)) %&gt;%\n group_by(zip_code, borough) %&gt;%\n summarize(n_buildings = n(),\n           geom_mean_height = exp(mean(log(max_floor), na.rm = T)),\n           tallest_building = max(max_floor, na.rm = T),\n           .groups = \"drop\") %&gt;%\n filter(n_buildings &gt;= 20) %&gt;%\n arrange(desc(geom_mean_height))\n\nWarning: There were 3 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `tallest_building = max(max_floor, na.rm = T)`.\nℹ In group 85: `zip_code = \"10565\"` and `borough = \"Bronx\"`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\n\njoined_zip_codes &lt;- zip_codes %&gt;%\n left_join(by_zip_code, by = c(\"modzcta\" = \"zip_code\")) %&gt;%\n mutate(\n   # population_density = POPULATION / AREA,\n   elevator_building_density = n_buildings / pop_est)\n\njoined_zip_codes %&gt;%\n ggplot(aes(fill = geom_mean_height)) +\n geom_sf() +\n scale_fill_gradient2(low = \"blue\",\n                     high = \"red\",\n                     midpoint = log10(6),\n                     trans = \"log10\") +\n ggthemes::theme_map() +\n coord_sf(datum = NA) +\n labs(fill = \"Average (geometric) height of buildings with elevators\") +\n theme(legend.position = \"top\")\n\nWarning in scale_fill_gradient2(low = \"blue\", high = \"red\", midpoint =\nlog10(6), : log-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_boxplot() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_violin() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n\nelevators %&gt;%\n mutate(floor_from = as.numeric(floor_from)) %&gt;%\n ggplot(aes(floor_to - floor_from, parse_number(speed_fpm))) +\n geom_point() +\n scale_x_log10() +\n scale_y_log10()\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_from = as.numeric(floor_from)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nWarning: 14 parsing failures.\n  row col expected actual\n17922  -- a number   ----\n31755  -- a number   `   \n33460  -- a number   *ABV\n36257  -- a number   ----\n38593  -- a number   A   \n..... ... ........ ......\nSee problems(...) for more details.\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning in scale_y_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 66183 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Home",
      "Main Pages",
      "Tidy Tuesday: NYC Elevators 2022-12-06"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis Portfolio",
    "section": "",
    "text": "Anthony W. Baker",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#documentation-pages",
    "href": "index.html#documentation-pages",
    "title": "index",
    "section": "Documentation Pages",
    "text": "Documentation Pages",
    "crumbs": [
      "Home",
      "Main Pages",
      "index"
    ]
  },
  {
    "objectID": "index.html#main-documentation",
    "href": "index.html#main-documentation",
    "title": "index",
    "section": "Main Documentation",
    "text": "Main Documentation\n\n\n\nTidy Tuesday: NYC Elevators\nIntroduction to the first topic.\n\n\n\nPage 2\nOverview of the second topic.\n\n\n\nPage 3\nDetails about the third topic.",
    "crumbs": [
      "Analyses",
      "index"
    ]
  },
  {
    "objectID": "index.html#additional-resources",
    "href": "index.html#additional-resources",
    "title": "index",
    "section": "Additional Resources",
    "text": "Additional Resources\n\nNested Page 1: Additional information on topic 1\nNested Page 2: Additional information on topic 2",
    "crumbs": [
      "Analyses",
      "index"
    ]
  },
  {
    "objectID": "index.html#recent-updates",
    "href": "index.html#recent-updates",
    "title": "index",
    "section": "Recent Updates",
    "text": "Recent Updates\n\n  \n    Page 3 updated\n    2 days ago\n  \n  \n    Page 1 updated\n    5 days ago\n  \n  \n    Page 2 added\n    1 week ago",
    "crumbs": [
      "Analyses",
      "index"
    ]
  },
  {
    "objectID": "index.html#featured",
    "href": "index.html#featured",
    "title": "Data Analysis Portfolio",
    "section": "Featured",
    "text": "Featured\n\n\nTidy Tuesday: NYC Elevators\nExploring the tallest and fastest elevators in NYC.\n\n\n\nPage 2\nOverview of the second topic.\n\n\n\nPage 3\nDetails about the third topic.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#all",
    "href": "index.html#all",
    "title": "Data Analysis Portfolio",
    "section": "All",
    "text": "All\n\nNYC Elevators: Exploring the tallest and fastest elevators in NYC.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html#tidy-tuesday-nyc-elevators",
    "href": "tidy_tuesday_nyc_elevators/tidy_tuesday_nyc_elevators.html#tidy-tuesday-nyc-elevators",
    "title": "Data Analysis Portfolio",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntt &lt;- tidytuesdayR::tt_load('2022-12-06')\n\n---- Compiling #TidyTuesday Information for 2022-12-06 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"elevators.csv\"\nNew names:\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\ntt$elevators %&gt;% \n  janitor::clean_names() %&gt;%\n  glimpse()\n\nRows: 76,088\nColumns: 29\n$ dv_device_number             &lt;chr&gt; \"1D1\", \"1D10000\", \"1D10001\", \"1D10006\", \"…\n$ device_status                &lt;chr&gt; \"W\", \"A\", \"A\", \"A\", \"A\", \"W\", \"W\", \"A\", \"…\n$ dv_device_status_description &lt;chr&gt; \"WK IN PROG\", \"ACTIVE\", \"ACTIVE\", \"ACTIVE…\n$ bin                          &lt;dbl&gt; 1084781, 1008273, 1078701, 1003957, 10039…\n$ tax_block                    &lt;dbl&gt; 1480, 525, 844, 306, 306, 446, 446, 1270,…\n$ tax_lot                      &lt;dbl&gt; 1, 56, 17, 14, 14, 48, 48, 1, 62, 32, 32,…\n$ house_number                 &lt;chr&gt; \"521\", \"494\", \"31\", \"271\", \"271\", \"93\", \"…\n$ street_name                  &lt;chr&gt; \"EAST   68 STREET\", \"WEST BROADWAY\", \"UNI…\n$ zip_code                     &lt;dbl&gt; 0, 10012, 100030000, 100020000, 100020000…\n$ borough                      &lt;chr&gt; \"Manhattan\", \"Manhattan\", \"Manhattan\", \"M…\n$ device_type                  &lt;chr&gt; \"Dumbwaiter (D)\", \"Dumbwaiter (D)\", \"Dumb…\n$ dv_lastper_insp_date         &lt;dbl&gt; NA, 20140325, 20150803, 20150429, 2015042…\n$ dv_lastper_insp_disp         &lt;chr&gt; NA, \"NV\", \"NV\", \"NV\", \"NV\", NA, NA, \"DF\",…\n$ dv_approval_date             &lt;chr&gt; NA, \"19960524\", \"19961021\", \"19961001\", \"…\n$ dv_manufacturer              &lt;chr&gt; NA, \"**\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dv_travel_distance           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_speed_fpm                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_capacity_lbs              &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_car_buffer_type           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_governor_type             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_machine_type              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_safety_type               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_mode_operation            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_status_date               &lt;dbl&gt; 20090115, 20140113, 20090116, 19970226, 1…\n$ dv_floor_from                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dv_floor_to                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ x27                          &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ latitude                     &lt;dbl&gt; 40.76445, 40.72725, 40.73681, 40.71771, 4…\n$ longitude                    &lt;dbl&gt; -73.95414, -73.99984, -73.99109, -73.9930…\n\nelevators &lt;- tt$elevators %&gt;%\n  janitor::clean_names() %&gt;%\n  rename_all(str_remove, \"^dv_\") %&gt;%\n  mutate(\n    floor_to_raw = floor_to,\n    floor_to = as.numeric(floor_to_raw),\n    floor_to = if_else(floor_to &gt; 90, NA, floor_to),\n    zip_code = na_if(zip_code, 0),\n    zip_code = str_sub(zip_code, 1, 5)) %&gt;%\n  filter(longitude &gt; -76)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_to = as.numeric(floor_to_raw)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n\nelevators %&gt;%\n  ggplot(aes(longitude, latitude, color = borough)) +\n  geom_point()\n\n\n\n\n\n\n\nelevators %&gt;%\n  filter(!is.na(floor_to)) %&gt;%\n  mutate(floor_to = as.numeric(floor_to)) %&gt;%\n  ggplot(aes(floor_to)) + \n  geom_histogram() +\n  scale_x_log10(labels = scales::comma_format(1))\n\nWarning in scale_x_log10(labels = scales::comma_format(1)): log-10\ntransformation introduced infinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nby_building &lt;- elevators %&gt;%\n  arrange(desc(floor_to)) %&gt;%\n  group_by(bin, house_number, street_name, zip_code, borough, longitude, latitude) %&gt;%\n  summarize(\n    max_floor = na_if(max(floor_to, na.rm = T), -Inf),\n    n_elevators = n(),\n    latitude = mean(latitude, na.rm = T),\n    longitude = mean(longitude, na.rm = T),\n    .groups = \"drop\") %&gt;%\n  arrange(desc(max_floor)) \n\nWarning: There were 6627 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `max_floor = na_if(max(floor_to, na.rm = T), -Inf)`.\nℹ In group 24: `bin = 1000041`, `house_number = \"11\"`, `street_name = \"STONE\n  ST\"`, `zip_code = \"10004\"`, `borough = \"Manhattan\"`, `longitude = -74.01224`,\n  `latitude = 40.7042`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 6626 remaining warnings.\n\ng &lt;- by_building %&gt;%\n  filter(!is.na(max_floor)) %&gt;%\n  arrange(max_floor) %&gt;%\n  ggplot(aes(longitude, latitude, color = max_floor)) +\n  geom_point() +\n  # scale_color_continuous(trans = \"log10\")\n  scale_color_gradient2(\n    trans = \"log10\",\n    low = \"blue\",\n    high = \"red\",\n    midpoint = log10(10)\n  ) + \n  ggthemes::theme_map() + \n  labs(title = \"Height of NYC buildings by elevator floor\")\n\ng\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", :\nlog-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nlibrary(rayshader)\nplot_gg(g)\n\nWarning in scale_color_gradient2(trans = \"log10\", low = \"blue\", high = \"red\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nzip_codes &lt;- read_sf(\"data/Modified Zip Code Tabulation Areas (MODZCTA)_20250310\")\n\nby_zip_code &lt;- by_building %&gt;%\n filter(!is.na(zip_code)) %&gt;%\n group_by(zip_code, borough) %&gt;%\n summarize(n_buildings = n(),\n           geom_mean_height = exp(mean(log(max_floor), na.rm = T)),\n           tallest_building = max(max_floor, na.rm = T),\n           .groups = \"drop\") %&gt;%\n filter(n_buildings &gt;= 20) %&gt;%\n arrange(desc(geom_mean_height))\n\nWarning: There were 3 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `tallest_building = max(max_floor, na.rm = T)`.\nℹ In group 85: `zip_code = \"10565\"` and `borough = \"Bronx\"`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\n\njoined_zip_codes &lt;- zip_codes %&gt;%\n left_join(by_zip_code, by = c(\"modzcta\" = \"zip_code\")) %&gt;%\n mutate(\n   # population_density = POPULATION / AREA,\n   elevator_building_density = n_buildings / pop_est)\n\njoined_zip_codes %&gt;%\n ggplot(aes(fill = geom_mean_height)) +\n geom_sf() +\n scale_fill_gradient2(low = \"blue\",\n                     high = \"red\",\n                     midpoint = log10(6),\n                     trans = \"log10\") +\n ggthemes::theme_map() +\n coord_sf(datum = NA) +\n labs(fill = \"Average (geometric) height of buildings with elevators\") +\n theme(legend.position = \"top\")\n\nWarning in scale_fill_gradient2(low = \"blue\", high = \"red\", midpoint =\nlog10(6), : log-10 transformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_boxplot() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nby_building %&gt;%\n  filter(!is.na(borough)) %&gt;%\n  ggplot(aes(max_floor, borough)) +\n  geom_violin() + \n  scale_x_log10()\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6628 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n\nelevators %&gt;%\n mutate(floor_from = as.numeric(floor_from)) %&gt;%\n ggplot(aes(floor_to - floor_from, parse_number(speed_fpm))) +\n geom_point() +\n scale_x_log10() +\n scale_y_log10()\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `floor_from = as.numeric(floor_from)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nWarning: 14 parsing failures.\n  row col expected actual\n17922  -- a number   ----\n31755  -- a number   `   \n33460  -- a number   *ABV\n36257  -- a number   ----\n38593  -- a number   A   \n..... ... ........ ......\nSee problems(...) for more details.\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning in scale_y_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 66183 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Analyses",
      "Tidy Tuesday: NYC Elevators"
    ]
  }
]